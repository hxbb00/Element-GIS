<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ripple="clr-namespace:Avalonia.Themes.Neumorphism.Controls.Ripple"
                    xmlns:assist="clr-namespace:Avalonia.Themes.Neumorphism.Assist"
                    xmlns:system="clr-namespace:System;assembly=netstandard"
                    xmlns:converters="clr-namespace:Avalonia.Themes.Neumorphism.Converters">



	<!-- Neumorphism theme ok -->
	
	
  <Design.PreviewWith>
    <Border Padding="20">
      <StackPanel Spacing="20">
        <RepeatButton Content="Click Me!" />
        <RepeatButton Content="Disabled" IsEnabled="False" />
        <RepeatButton Content="Rounded" CornerRadius="16"/>
      </StackPanel>
    </Border>
  </Design.PreviewWith>


	<!--Default RepeatButton theme-->
	<ControlTheme x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter Name="PART_ContentPresenter"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  Padding="{TemplateBinding Padding}"
                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
			</ControlTemplate>
		</Setter>

		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="0.23" />
		</Style>

	</ControlTheme>
	

	<!-- Material style -->
	<!-- Requires "Material" class in order not to break existing controls -->
	<ControlTheme x:Key="RepeatButtonMaterial" TargetType="RepeatButton">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Padding" Value="16 8" />
		<Setter Property="assist:ShadowAssist.ShadowDepth" Value="Depth1" />
		<Setter Property="assist:ButtonAssist.HoverColor" Value="{Binding Foreground, Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}" />
		<Setter Property="assist:ButtonAssist.ClickFeedbackColor" Value="#000000" />
		<Setter Property="TextBlock.FontWeight" Value="Medium" />
		<Setter Property="TextBlock.FontSize" Value="14" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="PART_ButtonRootBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding assist:ButtonAssist.CornerRadius}"
                        assist:ShadowAssist.ShadowDepth="{TemplateBinding assist:ShadowAssist.ShadowDepth}">
					<Border ClipToBounds="True"
                            CornerRadius="{TemplateBinding assist:ButtonAssist.CornerRadius}">
						<Grid>
							<Border Name="PART_HoverIndicator" BorderThickness="0"
                                    Background="{TemplateBinding assist:ButtonAssist.HoverColor}" />
							<ripple:RippleEffect RippleFill="{TemplateBinding assist:ButtonAssist.ClickFeedbackColor}"
                                                 RippleOpacity="{StaticResource ButtonPressedOpacity}">
								<ContentPresenter Name="PART_ContentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  Padding="{TemplateBinding Padding}"
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							</ripple:RippleEffect>
						</Grid>
					</Border>
				</Border>
			</ControlTemplate>
		</Setter>

		<!-- Transitions -->
		<Style Selector="^:not(.notransitions) /template/ Border#PART_HoverIndicator">
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing" />
				</Transitions>
			</Setter>
		</Style>

		<!-- Default state -->
		<Style
			Selector="^ /template/ Border#PART_HoverIndicator, ^ /template/ Border#PART_HoverIndicator">
			<Setter Property="Opacity" Value="0" />
		</Style>

		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
		</Style>

		<!-- Feedbacks -->
		<Style Selector="^:not(.disabled):pointerover /template/ Border#PART_HoverIndicator">
			<Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
		</Style>

		
		
	</ControlTheme>






	<ControlTheme x:Key="RepeatButtonNeumorphismIcon" TargetType="RepeatButton">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Padding" Value="16 16 16 16" />
		<Setter Property="Height" Value="48" />
		<Setter Property="Width" Value="48" />
		<Setter Property="Template">
			<ControlTemplate>
				<Grid>
					<Ellipse Name="PART_HoverIndicator"
                             Width="{TemplateBinding Width}"
                             Height="{TemplateBinding Height}" Margin="-100"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                             Fill="{TemplateBinding Foreground}"
                             IsHitTestVisible="False" />
					<Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            ClipToBounds="True" CornerRadius="1000000">
						<ripple:RippleEffect RippleFill="{DynamicResource MaterialDesignFlatButtonRipple}"
                                             RippleOpacity="{StaticResource ButtonPressedOpacity}">
							<ContentPresenter Name="PART_ContentPresenter"
                                              CornerRadius="{TemplateBinding assist:ButtonAssist.CornerRadius}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
						</ripple:RippleEffect>
					</Border>
				</Grid>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:not(:disabled):pointerover /template/ Ellipse#PART_HoverIndicator">
			<Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
		</Style>

		<!-- Transitions -->
		<Style Selector="^:not(.notransitions) /template/ Ellipse#PART_HoverIndicator">
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing" />
				</Transitions>
			</Setter>
		</Style>

		<!-- Default state -->
		<Style Selector="^.Neumorphism.DrawerItem">
			<Setter Property="Height" Value="48" />
		</Style>

		<!-- Feedbacks -->
		<Style Selector="^ /template/ Ellipse#PART_HoverIndicator">
			<Setter Property="Opacity" Value="0" />
		</Style>
		
	</ControlTheme>



	
	<ControlTheme x:Key="RepeatButtonNeumorphismFlat" BasedOn="{StaticResource {x:Type RepeatButton}}" TargetType="RepeatButton">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Padding" Value="16 6" />
		<Setter Property="assist:ShadowAssist.ShadowDepth" Value="Depth0" />
		<Setter Property="assist:ButtonAssist.HoverColor" Value="{Binding $self.Foreground}" />
		<Setter Property="assist:ButtonAssist.ClickFeedbackColor" Value="#CCCCCC" />

		<Style Selector="^:not(.disabled):pointerover /template/ Border#PART_HoverIndicator">
			<Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
		</Style>

		<Style Selector="^.Light:not(.Outline)">
			<Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
		</Style>
		<Style Selector="^.Dark:not(.Outline)">
			<Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
		</Style>
		<Style Selector="^.Accent:not(.Outline)">
			<Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
		</Style>

		<Style Selector="^.Accent.Flat:not(.Outline)">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
		</Style>
	</ControlTheme>
	
	



	

	<!-- Outlined buttons -->
	<ControlTheme x:Key="RepeatButtonNeumorphismOutline" TargetType="RepeatButton">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Padding" Value="16 6" />
		<Setter Property="assist:ShadowAssist.ShadowDepth" Value="Depth0" />

		<Style Selector="^.Accent">
			<Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
		</Style>

		<Style Selector="^.Light">
			<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
		</Style>
		<Style Selector="^.Dark">
			<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
		</Style>
		
	</ControlTheme>
</ResourceDictionary>
