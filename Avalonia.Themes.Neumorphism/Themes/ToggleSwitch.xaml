<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=netstandard"
    xmlns:ripple="clr-namespace:Avalonia.Themes.Neumorphism.Controls.Ripple"
    xmlns:naming="clr-namespace:Avalonia.Themes.Neumorphism.Resources.Naming"
    xmlns:assist="clr-namespace:Avalonia.Themes.Neumorphism.Assist"
    xmlns:converters="clr-namespace:Avalonia.Themes.Neumorphism.Converters">


	<!-- Neumorphism theme ok -->
  
  
  <Design.PreviewWith>
    <StackPanel Margin="20" Width="250" Spacing="24">
      <StackPanel Spacing="12" >
        <ToggleSwitch HorizontalContentAlignment="Left"
                      Content="Header"
                      OffContent="Off"
                      OnContent="On"/>
      </StackPanel>
    </StackPanel>
  </Design.PreviewWith>


	<!--Default ToggleSwitch theme-->
  <ControlTheme x:Key="{x:Type ToggleSwitch}" TargetType="ToggleSwitch">
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOnBackground" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOffBackground" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOnForeground" Value="{DynamicResource PrimaryHueLightBrush}" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOffForeground" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOverForeground" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="8 0 8 0" />
    <Setter Property="OffContent" Value="" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Height" Value="28" />
    <Setter Property="MinWidth" Value="72" />
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="FontStyle" Value="Normal"/>
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid ColumnDefinitions="Auto, Auto, Auto" ClipToBounds="False" HorizontalAlignment="Stretch">
          <!-- Unused. Left for compability with stupid avalonia control code behind -->
          <Canvas x:Name="PART_SwitchKnob" Name="SwitchKnob"
                            HorizontalAlignment="Left"
                            IsVisible="False" IsHitTestVisible="False"
                            Width="0" Height="0">
            <Grid x:Name="PART_MovingKnobs" Name="MovingKnobs"
                              IsVisible="False" IsHitTestVisible="False"
                              Width="0" Height="0" />
          </Canvas>
			<ContentPresenter Grid.Column="0" Name="PART_ContentPresenterLeft"
                            Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                            FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                            FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                            FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                            FontStyle="{Binding FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{TemplateBinding Content}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center">

				<ContentPresenter.ContentTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding}"/>
					</DataTemplate>
				</ContentPresenter.ContentTemplate>
				
			</ContentPresenter>
			  
          <Grid Grid.Column="1" ClipToBounds="False">
            <!--Background-->
            <Border Name="Track"
                    Opacity="1"
                    HorizontalAlignment="Left"
                    Height="{TemplateBinding Height}"
                    VerticalAlignment="Center"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Width="{TemplateBinding MinWidth}"
                    CornerRadius="100">
              <Border.BoxShadow>
                <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="2">
                  <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                  <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                </MultiBinding>
              </Border.BoxShadow>
            </Border>
            <Grid Name="ThumbHolder" ClipToBounds="False" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}"
                                HorizontalAlignment="Left" VerticalAlignment="Top">
              <!--Ripple effect-->
              <Ellipse Name="RippleThumb"
							Fill="Gray"
							Height="18" Width="18"
							IsHitTestVisible="False"
							Margin="-100"
							HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse.RenderTransform>
                  <ScaleTransform ScaleX="1" ScaleY="1" />
                </Ellipse.RenderTransform>
              </Ellipse>
              <AdornerLayer>
                <!--Circle-->
                <Border Name="Thumb"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="{TemplateBinding Cursor}" Margin="5"
                        CornerRadius="100"
                        Width="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=40%}"
                        Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=40%}"
                        ClipToBounds="False">
                  <Border.BoxShadow>
                    <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
                      <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                      <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                      <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                    </MultiBinding>
                  </Border.BoxShadow>
                </Border>
              </AdornerLayer>
            </Grid>
          </Grid>
			<ContentPresenter Grid.Column="2" Name="PART_ContentPresenterRight"
						  Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
						  FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
						  FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
						  FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
						  FontStyle="{Binding FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
						  Content="{TemplateBinding Content}"
						  Margin="{TemplateBinding Padding}"
						  HorizontalAlignment="Stretch"
						  VerticalAlignment="Center">

				<ContentPresenter.ContentTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding}"/>
					</DataTemplate>
				</ContentPresenter.ContentTemplate>
				
			</ContentPresenter>
        </Grid>
      </ControlTemplate>
    </Setter>

    <!--Class LeftHeader-->
    <Style Selector="^.LeftHeader">
    </Style>

    <Style Selector="^:disabled">
      <Setter Property="Opacity" Value="0.23" />
    </Style>

    <!-- Transitions -->
    <Style Selector="^:not(:pressed) /template/ Ellipse#RippleThumb">
      <Style.Animations>
        <Animation Duration="0:0:0.2" FillMode="Both">
          <KeyFrame Cue="0%">
            <Setter Property="Opacity" Value="0.28" />
          </KeyFrame>
          <KeyFrame Cue="100%">
            <Setter Property="Opacity" Value="0" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>
    <Style Selector="^:pressed:not(.notransitions) /template/ Ellipse#RippleThumb">
      <Setter Property="Opacity" Value="0.28" />
      <Style.Animations>
          <!--<Animation Duration="0:0:0.2" FillMode="Both">
            <KeyFrame Cue="0%">
              <Setter Property="ScaleTransform.ScaleX" Value="1" />
              <Setter Property="ScaleTransform.ScaleY" Value="1" />
            </KeyFrame>
            <KeyFrame Cue="100%">
              <Setter Property="ScaleTransform.ScaleX" Value="2.5" />
              <Setter Property="ScaleTransform.ScaleY" Value="2.5" />
            </KeyFrame>
          </Animation>-->
        <!--<animations:BeginAnimation>
          <Animation Duration="0:0:0.2" FillMode="Both">
            <KeyFrame Cue="0%">
              <Setter Property="ScaleTransform.ScaleX" Value="1" />
              <Setter Property="ScaleTransform.ScaleY" Value="1" />
            </KeyFrame>
            <KeyFrame Cue="100%">
              <Setter Property="ScaleTransform.ScaleX" Value="2.5" />
              <Setter Property="ScaleTransform.ScaleY" Value="2.5" />
            </KeyFrame>
          </Animation>
        </animations:BeginAnimation>-->
      </Style.Animations>
    </Style>

    <Style Selector="^:not(.notransitions) /template/ Grid#ThumbHolder">
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="LinearEasing"/>
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="^:not(:checked,.Outline) /template/ Grid#ThumbHolder">
      <Setter Property="RenderTransform" Value="translate(0px,0px)" />
    </Style>

    <Style Selector="^:checked /template/ Grid#ThumbHolder">
      <Setter Property="RenderTransform">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource WidthToRenderTransformConverter}">
            <Binding Path="MinWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
			      <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <!--Right header content label-->
    <Style Selector="^:not(:checked,.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterRight">
      <Setter Property="Content">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource StringReplaceConverter}">
            <Binding Path="OffContent" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:not(:checked,.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterLeft">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <Style Selector="^[Content=] /template/ ContentPresenter#PART_ContentPresenterLeft">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <Style Selector="^:checked:not(.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterRight">
      <Setter Property="Content">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource StringReplaceConverter}">
            <Binding Path="OnContent" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:checked:not(.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterLeft">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <Style Selector="^[Content=] /template/ ContentPresenter#PART_ContentPresenterRight">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!--LeftHeader content label-->
    <Style Selector="^.LeftHeader:not(:checked) /template/ ContentPresenter#PART_ContentPresenterLeft">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource StringReplaceConverter}">
          <Binding Path="OffContent" RelativeSource="{RelativeSource TemplatedParent}"/>
          <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="^.LeftHeader:not(:checked) /template/ ContentPresenter#PART_ContentPresenterRight">
    <Setter Property="IsVisible" Value="False"/>
  </Style>

  <Style Selector="^.LeftHeader:checked /template/ ContentPresenter#PART_ContentPresenterLeft">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource StringReplaceConverter}">
          <Binding Path="OnContent" RelativeSource="{RelativeSource TemplatedParent}"/>
          <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="^.LeftHeader:checked /template/ ContentPresenter#PART_ContentPresenterRight">
    <Setter Property="IsVisible" Value="False"/>
  </Style>


  <Style Selector="^:not(.notransitions) /template/ Border#Thumb">
    <Setter Property="Transitions">
      <Transitions>
        <BrushTransition Property="Background" Duration="0:0:0.25" Easing="LinearEasing"/>
      </Transitions>
    </Setter>
  </Style>

  <Style Selector="^:not(:checked) /template/ Border#Thumb">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
  </Style>

  <!--Default-->
  <Style Selector="^:not(:checked):not(.Accent) /template/ Border#Thumb">
    <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOffForeground}" />
  </Style>

  <Style Selector="^:checked:not(.Accent) /template/ Border#Thumb">
    <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOnForeground}" />
  </Style>

  <Style Selector="^:not(:checked):pointerover:not(.Accent) /template/ Border#Thumb">
    <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOverForeground}"/>
  </Style>

  <Style Selector="^:checked:pointerover:not(.Accent) /template/ Border#Thumb">
    <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOverForeground}"/>
  </Style>

    <!--Accent-->
    <Style Selector="^.Accent">
      <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOnForeground" Value="{DynamicResource SecondaryHueMidBrush}" />
      <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOffForeground" Value="Transparent" />
      <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOverForeground" Value="{DynamicResource SecondaryHueDarkBrush}" />
    </Style>

    <Style Selector="^.Accent:not(:checked) /template/ Border#Thumb">
      <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOffForeground}" />
    </Style>

    <Style Selector="^.Accent:checked /template/ Border#Thumb">
      <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOnForeground}" />
    </Style>

    <Style Selector="^.Accent:not(:checked):pointerover /template/ Border#Thumb">
      <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOverForeground}"/>
    </Style>

    <Style Selector="^.Accent:checked:pointerover /template/ Border#Thumb">
      <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOverForeground}"/>
    </Style>


    <Style Selector="^:not(.Outline) /template/ Border#Track">
		  <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOffBackground}"/>
    </Style>

    <Style Selector="^:checked:not(.Outline) /template/ Border#Track">
		  <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOnBackground}"/>
    </Style>

    <Style Selector="^.Outline /template/ Border#Track">
		  <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOffBackground}"/>
    </Style>

    <Style Selector="^.Outline:checked /template/ Border#Track">
		  <Setter Property="Background" Value="{TemplateBinding assist:ToggleSwitchAssist.SwitchTrackOnBackground}"/>
    </Style>

    <Style Selector="^:disabled">
      <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
  </ControlTheme>


  <!--Class Outline-->
  <ControlTheme x:Key="ToggleSwitchOutline" BasedOn="{StaticResource {x:Type ToggleSwitch}}" TargetType="ToggleSwitch">
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOnBackground" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOffBackground" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOnForeground" Value="{DynamicResource PrimaryHueLightBrush}" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOffForeground" Value="Transparent" />
    <Setter Property="assist:ToggleSwitchAssist.SwitchTrackOverForeground" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="BorderThickness" Value="8" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="8 0 8 0" />
    <Setter Property="OffContent" Value="" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="MinWidth" Value="82" />
    <Setter Property="Height" Value="28" />
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="FontStyle" Value="Normal"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Grid ColumnDefinitions="Auto, Auto, Auto" ClipToBounds="False" HorizontalAlignment="Stretch">
          <!-- Unused. Left for compability with stupid avalonia control code behind -->
          <Canvas x:Name="PART_SwitchKnob" Name="SwitchKnob"
                            HorizontalAlignment="Left"
                            IsVisible="False" IsHitTestVisible="False"
                            Width="0" Height="0">
            <Grid x:Name="PART_MovingKnobs" Name="MovingKnobs"
                              IsVisible="False" IsHitTestVisible="False"
                              Width="0" Height="0" />
          </Canvas>
          <ContentPresenter Grid.Column="0" Name="PART_ContentPresenterLeft"
                    Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                    FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                    FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                    FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                    FontStyle="{Binding FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    Content="{TemplateBinding Content}"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center">
            <ContentPresenter.ContentTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding}"/>
              </DataTemplate>
            </ContentPresenter.ContentTemplate>
          </ContentPresenter>

          <Grid Grid.Column="1" ClipToBounds="False">
            <!--Outline-->
            <Border Name="Outline"
                            Opacity="1"
                            HorizontalAlignment="Left"
                            Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=-12}"
                            VerticalAlignment="Center"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding BorderBrush}"
                            Width="{TemplateBinding MinWidth}"
                            CornerRadius="100">
              <Border.BoxShadow>
                <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
                  <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                  <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                </MultiBinding>
              </Border.BoxShadow>
              <!--Background-->
              <Border Name="Track"
								Opacity="1"
								BorderBrush="Transparent"
								BorderThickness="0"
								HorizontalAlignment="Stretch"
								Background="{TemplateBinding Background}"
								VerticalAlignment="Stretch"
								CornerRadius="100">
                <Border.BoxShadow>
                  <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="2">
                    <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                    <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                    <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                  </MultiBinding>
                </Border.BoxShadow>
              </Border>
            </Border>
            <Grid Name="ThumbHolder" ClipToBounds="False" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}"
                                HorizontalAlignment="Left" VerticalAlignment="Top">
              <!--Ripple effect-->
              <Ellipse Name="RippleThumb"
                                    Fill="Gray"
                                    Height="18" Width="18"
                                    IsHitTestVisible="False"
                                    Margin="-100"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse.RenderTransform>
                  <ScaleTransform ScaleX="1" ScaleY="1" />
                </Ellipse.RenderTransform>
              </Ellipse>
              <AdornerLayer>
                <!--Circle-->
                <Border Name="Thumb"
                                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"
                                        CornerRadius="100"
                                        
                                        Width="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=40%}"
                                        Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=40%}"
                                        ClipToBounds="False">
                  <Border.BoxShadow>
                    <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
                      <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                      <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                      <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                    </MultiBinding>
                  </Border.BoxShadow>
                </Border>
              </AdornerLayer>
            </Grid>
          </Grid>
          <ContentPresenter Grid.Column="2" Name="PART_ContentPresenterRight"
                    Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                    FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                    FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                    FontWeight="{Binding FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                    FontStyle="{Binding FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    Content="{TemplateBinding Content}"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center">
            <ContentPresenter.ContentTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding}"/>
              </DataTemplate>
            </ContentPresenter.ContentTemplate>
          </ContentPresenter>

        </Grid>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:not(:checked) /template/ Grid#ThumbHolder">
      <Setter Property="RenderTransform" Value="translate(7px,0px)" />
    </Style>

    <Style Selector="^:checked /template/ Grid#ThumbHolder">
      <Setter Property="RenderTransform">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource WidthToRenderTransformConverter}">
            <Binding Path="MinWidth" Converter="{StaticResource WidthMinusValueConverter}" ConverterParameter="7" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>
    
  </ControlTheme>

</ResourceDictionary>
