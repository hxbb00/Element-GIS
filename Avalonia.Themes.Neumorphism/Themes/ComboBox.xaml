<ResourceDictionary xmlns="https://github.com/avaloniaui"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:controls="clr-namespace:Avalonia.Themes.Neumorphism.Controls"
				xmlns:ripple="clr-namespace:Avalonia.Themes.Neumorphism.Controls.Ripple"
				xmlns:assist="clr-namespace:Avalonia.Themes.Neumorphism.Assist"
				xmlns:system="clr-namespace:System;assembly=netstandard"
				xmlns:converters="clr-namespace:Avalonia.Themes.Neumorphism.Converters"
				xmlns:sys="using:System">

	<!-- Neumorphism theme ok -->
	
	
  <Design.PreviewWith>
    <Border Padding="20">
      <StackPanel Spacing="10">
        <ComboBox PlaceholderText="Select an item">
          <ComboBoxItem>Item 1</ComboBoxItem>
          <ComboBoxItem>Item 2</ComboBoxItem>
        </ComboBox>
        <ComboBox IsEnabled="False"
                  Width="200"
                  SelectedIndex="1"
                  HorizontalContentAlignment="Center">
          <ComboBoxItem>Item 1</ComboBoxItem>
          <ComboBoxItem>Item 2</ComboBoxItem>
        </ComboBox>
        <ComboBox PlaceholderText="Error">
          <DataValidationErrors.Error>
            <sys:Exception>
              <x:Arguments>
                <x:String>Error</x:String>
              </x:Arguments>
            </sys:Exception>
          </DataValidationErrors.Error>
        </ComboBox>
      </StackPanel>
    </Border>
  </Design.PreviewWith>



	<!--Default ComboBox theme-->
	<ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="8,4" />
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Width" Value="NaN"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}" />
		<Setter Property="FontFamily" Value="{DynamicResource NeumorphismFont2}"/>
    <Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="assist:ComboBoxAssist.UseFloatingWatermark" Value="False"/>
		<Setter Property="assist:ComboBoxAssist.InnerLeftBackground" Value="#22444444"/>
		<Setter Property="assist:ComboBoxAssist.InnerRightBackground" Value="#22444444"/>
		<Setter Property="assist:ComboBoxAssist.InnerLeftPadding" Value="0"/>
		<Setter Property="assist:ComboBoxAssist.InnerRightPadding" Value="0"/>

    <!--<Setter Property="assist:ComboBoxAssist.WatermarkContent">
			<Setter.Value>
				<Template>
					<TextBlock Name="watermark" Background="Red"
									  HorizontalAlignment="Stretch"
									  VerticalAlignment="Center"
									  Foreground="{TemplateBinding Foreground}"
									  FontFamily="{TemplateBinding FontFamily}"
									  FontSize="{TemplateBinding FontSize}"
									  FontWeight="{TemplateBinding FontWeight}"
									  FontStyle="{TemplateBinding FontStyle}"
									  Text="{TemplateBinding PlaceholderText}"
									  Margin="{TemplateBinding Height, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=30%|10%|100%|10%}"
									  Opacity="{TemplateBinding assist:ComboBoxAssist.UseFloatingWatermark, Converter={StaticResource BooleanValueToDoubleConverter}, ConverterParameter=1}" />
				</Template>
			</Setter.Value>
		</Setter>-->

		<Setter Property="Template">
			<ControlTemplate>
				<Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" ClipToBounds="False">

					<Border Name="PART_Border" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch"
							  CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=0}"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}">

						<Grid ColumnDefinitions="Auto, *, Auto" HorizontalAlignment="Stretch">

							<TextBlock Name="floatingWatermark" Grid.Column="1"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center"
									Foreground="{TemplateBinding Foreground}"
									FontFamily="{TemplateBinding FontFamily}"
									FontSize="{TemplateBinding FontSize}"
									FontWeight="{TemplateBinding FontWeight}"
									FontStyle="{TemplateBinding FontStyle}"
									Text="{TemplateBinding PlaceholderText}"
									Opacity="1"
									IsVisible="{TemplateBinding assist:ComboBoxAssist.UseFloatingWatermark}"
									RenderTransformOrigin="0, 0" />

							<TextBlock Name="watermark" Grid.Column="1"
									  HorizontalAlignment="Stretch"
									  VerticalAlignment="Center"
									  Foreground="{TemplateBinding Foreground}"
									  FontFamily="{TemplateBinding FontFamily}"
									  FontSize="{TemplateBinding FontSize}"
									  FontWeight="{TemplateBinding FontWeight}"
									  FontStyle="{TemplateBinding FontStyle}"
									  Text="{TemplateBinding PlaceholderText}"
									  Margin="{TemplateBinding Height, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=30%|10%|100%|10%}"
									  Opacity="{TemplateBinding assist:ComboBoxAssist.UseFloatingWatermark, Converter={StaticResource BooleanValueToDoubleConverter}, ConverterParameter=1}" />

							<!--<ContentPresenter Name="PART_Watermark" Grid.Column="1" Background="Transparent" Content="{TemplateBinding assist:ComboBoxAssist.WatermarkContent}" />-->

							<!--Left container-->
							<Border Grid.Column="0" Background="{TemplateBinding assist:ComboBoxAssist.InnerLeftBackground}" Width="{Binding ElementName=PART_InnerLeft, Path=Width}"
						   	  CornerRadius="{Binding ElementName=PART_Border, Path=CornerRadius, Converter={StaticResource DoubleToLeftRightCornerRadiusConverter}, ConverterParameter=0}"
									VerticalAlignment="Stretch">
								<ContentPresenter Name="PART_InnerLeft" Background="Transparent" Content="{TemplateBinding assist:ComboBoxAssist.InnerLeftContent}" Padding="{TemplateBinding assist:ComboBoxAssist.InnerLeftPadding}" HorizontalContentAlignment="Left" />
							</Border>

							<!--Middle-->
							<ToggleButton Name="PART_Toggle" Grid.Column="1" Theme="{StaticResource ToggleButtonNoFeedback}"
									  Height="{TemplateBinding Height}" Width="{Binding ElementName=watermark, Path=Width}"
									  BorderThickness="0"
									  Background="Transparent"
									  HorizontalContentAlignment="Stretch"
									  IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
									  Margin="0"
									  CornerRadius="0"
									  Padding="0">

								<Grid ColumnDefinitions="*,Auto" HorizontalAlignment="Stretch" Width="{Binding ElementName=watermark, Path=Width}">
									<!--Selected item-->
									<ContentPresenter Grid.Column="0" Name="contentPresenter"
													  BorderThickness="0" BorderBrush="Transparent"
													  HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
													  VerticalAlignment="Center"
													  Height="{TemplateBinding Height}"
													  Content="{TemplateBinding SelectionBoxItem}"
													  ContentTemplate="{TemplateBinding ItemTemplate}"
													  Margin="{TemplateBinding Height, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=0%|0%|0%|0%}"
													  Padding="{TemplateBinding Height, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=35%|0%|35%|0%}"/>
									<Border Name="splitBorder"
											Grid.Column="1"
											Width="10" Height="10"
											Margin="{TemplateBinding Height, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=0%|0%|35%|0%}"
											HorizontalAlignment="Right"
											VerticalAlignment="Center"
											BorderBrush="Transparent"
											BorderThickness="0">
										<Path Name="arrow"
											  Width="8" Height="8"
											  Margin="0,4,0,0"
											  Stretch="Uniform"
											  HorizontalAlignment="Right"
											  VerticalAlignment="Center"
											  Data="M7,10L12,15L17,10H7Z"
											  Fill="{DynamicResource MaterialDesignTextBoxBorder}" />
									</Border>
								</Grid>

							</ToggleButton>


							<!--Right container-->
							<Border Grid.Column="2" Background="{TemplateBinding assist:ComboBoxAssist.InnerRightBackground}" Width="{Binding ElementName=PART_InnerRight, Path=Width}"
							  CornerRadius="{Binding ElementName=PART_Border, Path=CornerRadius, Converter={StaticResource DoubleToLeftRightCornerRadiusConverter}, ConverterParameter=1}"
							  VerticalAlignment="Stretch">
								<ContentPresenter Name="PART_InnerRight" Background="Transparent" Content="{TemplateBinding assist:ComboBoxAssist.InnerRightContent}" Padding="{TemplateBinding assist:ComboBoxAssist.InnerRightPadding}" HorizontalContentAlignment="Left" />
							</Border>
						</Grid>
					</Border>

					<!--Combobox items container-->
					<Popup Name="PART_Popup"
						   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
						   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
						   VerticalOffset="-5"
						   HorizontalOffset="-10"
						   Margin="-8"
						   WindowManagerAddShadowHint="False"
						   PlacementTarget="{Binding ElementName=templateRoot}"
						   IsLightDismissEnabled="True"
						   UseLayoutRounding="True"
						   ClipToBounds="False" >
						<Border Name="PART_PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
														  Margin="10"
														  Background="{TemplateBinding Background}"
														  CornerRadius="5">
							<Border.BoxShadow>
								<MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
									<Binding ElementName="PART_Popup" Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
									<DynamicResource ResourceKey="MaterialDesignShadowLight" />
									<DynamicResource ResourceKey="MaterialDesignShadowDark" />
								</MultiBinding>
							</Border.BoxShadow>

							<ScrollViewer Background="{Binding Background, ElementName=PART_Popup}"
										  MaxHeight="{TemplateBinding MaxDropDownHeight}"
										  MinHeight="1" >
								<ItemsPresenter Name="PART_ItemsPresenter"
										ItemsPanel="{TemplateBinding ItemsPanel}" />
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</ControlTemplate>
		</Setter>

    <Style Selector="^ /template/ Border#PART_Border">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="1">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>
    
    
    

		<Style Selector="^[IsEnabled=false] /template/ TextBlock#watermark">
			<Setter Property="Opacity" Value="0.4"/>
		</Style>

		<Style Selector="^#floatingWatermark:not(.notransitions)">
			<Setter Property="Transitions">
				<Transitions>
					<ThicknessTransition Duration="0:0:0.25" Property="Margin" Easing="CubicEaseOut"/>
					<TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="CubicEaseOut" />
				</Transitions>
			</Setter>
		</Style>


		<!--floating wartermark-->
		<Style Selector="^:not(.Outline):not(^[SelectedIndex=-1]) /template/ TextBlock#floatingWatermark">
			<Setter Property="Margin" Value="{TemplateBinding Height, Converter={StaticResource ComboboxHeightToFloatingWatermarkMarginConverter}, ConverterParameter=-16}"/>
			<Setter Property="RenderTransform" Value="scale(0.75)"/>
      <Setter Property="Opacity" Value="0.5"/>
		</Style>




		<Style Selector="^[SelectedIndex=-1] /template/ TextBlock#floatingWatermark">
			<Setter Property="Margin" Value="15,10,80,10"/>
			<Setter Property="RenderTransform" Value="scale(1)"/>
		</Style>


		<!--classic watermark-->
		<Style Selector="^:not(^[SelectedIndex=-1]) /template/ TextBlock#watermark">
			<Setter Property="Opacity" Value="0"/>
		</Style>


		<Style Selector="^[IsDropDownOpen=true] /template/ Border#PART_Border">
			<Setter Property="BoxShadow">
				<Setter.Value>
					<MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="1">
						<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
						<DynamicResource ResourceKey="MaterialDesignShadowLight" />
						<DynamicResource ResourceKey="MaterialDesignShadowDark" />
					</MultiBinding>
				</Setter.Value>
			</Setter>
		</Style>

		<Style Selector="^:pointerover:not(.Filled) /template/ Border#PART_Border">
			<Setter Property="Background" Value="#44CCCCCC"/>
		</Style>

		<!--, TextBlock:disabled-->
		<Style Selector="^ /template/ Border#PART_Border:disabled">
			<Setter Property="Opacity" Value="0.5" />
		</Style>

		<Style Selector="^[IsDropDownOpen=true]:not(.Filled) /template/ Border#PART_PopupBorder">
			<Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
		</Style>

		<!--Filled-->
    <Style Selector="^.Filled[IsDropDownOpen=true] /template/ Border#PART_PopupBorder">
      <Setter Property="Background" Value="{DynamicResource MaterialDesignDisabledNoTransparency}"/>
    </Style>

    <Style Selector="^.Filled /template/ Border#PART_Border">
      <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
    </Style>
	</ControlTheme>

	<!-- Inset combobox theme -->
	<ControlTheme x:Key="ComboBoxInset" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
	</ControlTheme>

	<!-- Outset combobox theme -->
	<ControlTheme x:Key="ComboBoxOutset" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
		<Style Selector="^ /template/ Border#PART_Border">
			<Setter Property="BoxShadow">
				<Setter.Value>
					<MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
						<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
						<DynamicResource ResourceKey="MaterialDesignShadowLight" />
						<DynamicResource ResourceKey="MaterialDesignShadowDark" />
					</MultiBinding>
				</Setter.Value>
			</Setter>
		</Style>
	</ControlTheme>

	<!-- Outline combobox theme -->
	<ControlTheme x:Key="ComboBoxOutline" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="8,4" />
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Width" Value="NaN"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}" />
		<Setter Property="FontFamily" Value="{DynamicResource NeumorphismFont2}"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="assist:ComboBoxAssist.UseFloatingWatermark" Value="False"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" ClipToBounds="False">

					<TextBlock Name="floatingWatermark"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								Foreground="{TemplateBinding Foreground}"
								FontFamily="{TemplateBinding FontFamily}"
								FontSize="{TemplateBinding FontSize}"
								FontWeight="{TemplateBinding FontWeight}"
								FontStyle="{TemplateBinding FontStyle}"
								Text="{TemplateBinding PlaceholderText}"
								Padding="5,0,5,0"
								Opacity="1"
								IsVisible="{TemplateBinding assist:ComboBoxAssist.UseFloatingWatermark}"
								RenderTransformOrigin="0, 0" />


					<TextBlock Name="watermark"
							  HorizontalAlignment="Stretch"
							  VerticalAlignment="Center"
							  Foreground="{TemplateBinding Foreground}"
							  FontFamily="{TemplateBinding FontFamily}"
							  FontSize="{TemplateBinding FontSize}"
							  FontWeight="{TemplateBinding FontWeight}"
							  FontStyle="{TemplateBinding FontStyle}"
							  Text="{TemplateBinding PlaceholderText}"
							  Margin="15,10,80,10"
							  Padding="5,0,5,0"
							  Opacity="{TemplateBinding assist:ComboBoxAssist.UseFloatingWatermark, Converter={StaticResource BooleanValueToDoubleConverter}, ConverterParameter=1}" />

					<Border Name="PART_Border" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch"
							  CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=0}"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}">
							<Border.BoxShadow>
							  <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
								<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
								<DynamicResource ResourceKey="MaterialDesignShadowLight" />
								<DynamicResource ResourceKey="MaterialDesignShadowDark" />
							  </MultiBinding>
							</Border.BoxShadow>

						<Border Name="PART_InnerBorder" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
							  CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=0}"
							  Background="Transparent"
							  BorderBrush="Transparent"
							  BorderThickness="8">
								<Border.BoxShadow>
									<MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="2">
										<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
										<DynamicResource ResourceKey="MaterialDesignShadowLight" />
										<DynamicResource ResourceKey="MaterialDesignShadowDark" />
									</MultiBinding>
								</Border.BoxShadow>



							<ToggleButton Name="PART_Toggle" Theme="{StaticResource ToggleButtonNoFeedback}"
										  Width="{TemplateBinding Width}"
										  Height="{TemplateBinding Height}"
										  BorderThickness="0"
										  HorizontalContentAlignment="Stretch"
										  IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
										  Margin="0" assist:ButtonAssist.CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=0}"
										  Padding="0">



								<Grid ColumnDefinitions="*,Auto" HorizontalAlignment="Stretch" Width="{Binding ElementName=watermark, Path=Width}">
									<!--Selected item-->
									<ContentPresenter Name="contentPresenter"
													  BorderThickness="0" BorderBrush="Transparent"
													  HorizontalAlignment="Left"
													  VerticalAlignment="Center"
													  Content="{TemplateBinding SelectionBoxItem}"
													  ContentTemplate="{TemplateBinding ItemTemplate}"
													  Margin="{TemplateBinding Padding}" Padding="5,0,5,0"/>
									<Border Name="splitBorder"
											Grid.Column="1"
											Margin="16 20 16 16"
											HorizontalAlignment="Right"
											VerticalAlignment="Center"
											BorderBrush="Transparent"
											BorderThickness="0">
										<Path Name="arrow"
											  Width="8" Height="8"
											  Stretch="Uniform"
											  HorizontalAlignment="Right"
											  VerticalAlignment="Center"
											  Data="M7,10L12,15L17,10H7Z"
											  Fill="{DynamicResource MaterialDesignTextBoxBorder}" />
									</Border>
								</Grid>

							</ToggleButton>
						</Border>
					</Border>

					<!--Combobox items container-->
					<Popup Name="PART_Popup"
						   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
						   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
						   VerticalOffset="-5"
						   HorizontalOffset="-10"
						   Margin="-8"
						   WindowManagerAddShadowHint="False"
						   PlacementTarget="{Binding ElementName=templateRoot}"
						   IsLightDismissEnabled="True"
						   UseLayoutRounding="True"
						   ClipToBounds="False" >
						<Border Name="PART_PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
														  Margin="10"
														  Background="{TemplateBinding Background}" Opacity="1"
														  CornerRadius="5">
              <Border.BoxShadow>
                <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
                  <Binding ElementName="PART_Popup" Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                  <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                </MultiBinding>
              </Border.BoxShadow>
							<ScrollViewer Background="{Binding Background, ElementName=PART_Popup}"
										  MaxHeight="{TemplateBinding MaxDropDownHeight}"
										  MinHeight="1" >
								
								<ItemsPresenter Name="PART_ItemsPresenter"
										ItemsPanel="{TemplateBinding ItemsPanel}" />
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</ControlTemplate>
		</Setter>

		<Style Selector="^[IsDropDownOpen=true] /template/ Border#PART_PopupBorder">
			<Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
		</Style>

		<Style Selector="^:not(^[SelectedIndex=-1]) /template/ TextBlock#floatingWatermark">
			<Setter Property="Margin" Value="{TemplateBinding Height, Converter={StaticResource ComboboxHeightToFloatingWatermarkMarginConverter}, ConverterParameter=-18}"/>
			<Setter Property="RenderTransform" Value="scale(0.75)"/>
		</Style>
		
	</ControlTheme>
</ResourceDictionary>
