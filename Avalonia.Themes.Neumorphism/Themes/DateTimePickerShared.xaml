<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ripple="clr-namespace:Avalonia.Themes.Neumorphism.Controls.Ripple">
  
  
  <Design.PreviewWith>
    <Border Padding="20" Width="200">
      <StackPanel Spacing="20">
        <ListBoxItem Theme="{DynamicResource NeumorphismDateTimePickerItem}">Standard Item</ListBoxItem>
        <ListBoxItem Theme="{DynamicResource NeumorphismDateTimePickerItem}" Classes="MonthItem">Month Item</ListBoxItem>
        <RepeatButton Theme="{DynamicResource NeumorphismDateTimePickerButton}">Button</RepeatButton>
        <RepeatButton Theme="{DynamicResource DateTimePickerUpButton}" IsVisible="True"/>
        <RepeatButton Theme="{DynamicResource DateTimePickerDownButton}" IsVisible="True"/>
      </StackPanel>
    </Border>
  </Design.PreviewWith>




  <!-- Theme for the items displayed in the selectors -->
  <ControlTheme x:Key="NeumorphismDateTimePickerItem" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
    <Setter Property="Padding" Value="{DynamicResource DatePickerFlyoutPresenterItemPadding}"/>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="FontSize" Value="14" />

    <Setter Property="Template">
      <ControlTemplate>
        <TextPresenter Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                TextBox.FontSize="{TemplateBinding FontSize}"
                       TextAlignment="Center" VerticalAlignment="Center" Height="20">
        </TextPresenter>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:selected">
      <Setter Property="IsHitTestVisible" Value="False"/>
      <Style Selector="^/template/ Rectangle#PressedBackground">
        <Setter Property="Fill" Value="Transparent"/>
      </Style>
      <Style Selector="^/template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Red"/>
      </Style>
    </Style>

    <Style Selector="^.MonthItem">
      <Setter Property="Padding" Value="{DynamicResource DatePickerFlyoutPresenterMonthPadding}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>
  </ControlTheme>



  <!-- Theme for the items displayed in the selectors -->
  <ControlTheme x:Key="NeumorphismDateTimePickerItem2" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
    <Setter Property="Padding" Value="{DynamicResource DatePickerFlyoutPresenterItemPadding}"/>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="Hand" />

    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="PART_RootBorder" Cursor="{TemplateBinding Cursor}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Margin="{TemplateBinding Margin}"
						ClipToBounds="{TemplateBinding ClipToBounds}">
          <Grid>
            <Border Name="selectedBorder"	Background="{TemplateBinding Foreground}"/>
            <Border Name="pointerOverBorder" Background="{TemplateBinding Foreground}"/>
            <!--<ripple:RippleEffect Name="Ripple"
											 RippleFill="White"
											 Focusable="False"
											 ContentTemplate="{TemplateBinding ContentTemplate}"
											 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											 Padding="{TemplateBinding Padding}">-->
              <ContentPresenter Name="PART_ContentPresenter"
											  Background="{TemplateBinding Background}"
											  BorderBrush="{TemplateBinding BorderBrush}"
											  BorderThickness="{TemplateBinding BorderThickness}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}"
											  Padding="{TemplateBinding Padding}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
            <!--</ripple:RippleEffect>-->
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>


    <!-- Transitions -->
    <Style Selector="^:not(.notransitions) /template/ Border#selectedBorder,
					   ^:not(.notransitions) /template/ Border#pointerOverBorder">
      <Setter Property="Transitions">
        <Transitions>
          <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing" />
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="^:disabled">
      <Setter Property="Opacity" Value="0.56" />
      <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style Selector="^:not(:disabled):pointerover /template/ Border#pointerOverBorder">
      <Setter Property="Opacity" Value="0.06" />
    </Style>

    <Style Selector="^:selected /template/ Border#selectedBorder">
      <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
    </Style>

    <Style Selector="^:selected /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="TextBlock.Foreground" Value="White" />
    </Style>

    <Style Selector="^:not(:pointerover) /template/ Border#pointerOverBorder, ^:not(:selected) /template/ Border#selectedBorder">
      <Setter Property="Opacity" Value="0" />
    </Style>


    <Style Selector="^.MonthItem">
      <Setter Property="Padding" Value="{DynamicResource DatePickerFlyoutPresenterMonthPadding}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>
  </ControlTheme>


  


  <!-- This is used for both the accept/dismiss & repeatbuttons in the presenter-->
  <ControlTheme x:Key="NeumorphismDateTimePickerButton" TargetType="Button">
    <Setter Property="Background" Value="{DynamicResource DateTimePickerFlyoutButtonBackground}" />
    <Setter Property="Height" Value="22" />
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <ControlTemplate>
        <!-- 
                The background is doubled here for the loopingselector up/down repeat buttons 
                that appear opaque. Not sure how MS does it though I suspect this is it
                but source isn't MIT yet, so this is my solution -->
        <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
          <ContentPresenter x:Name="ContentPresenter"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{DynamicResource DateTimePickerFlyoutButtonBorderBrush}"
                  BorderThickness="{DynamicResource DateTimeFlyoutButtonBorderThickness}"
                  Content="{TemplateBinding Content}"
                  Foreground="{DynamicResource SystemControlHighlightAltBaseHighBrush}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  Padding="{TemplateBinding Padding}"
                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                  CornerRadius="{TemplateBinding CornerRadius}"/>
        </Border>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource DateTimePickerFlyoutButtonBackgroundPointerOver}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource DateTimePickerFlyoutButtonBorderBrushPointerOver}"/>
      <Setter Property="Foreground" Value="{DynamicResource DateTimePickerFlyoutButtonForegroundPointerOver}"/>
    </Style>

    <Style Selector="^:pressed /template/ ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource DateTimePickerFlyoutButtonBackgroundPressed}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource DateTimePickerFlyoutButtonBorderBrushPressed}"/>
      <Setter Property="Foreground" Value="{DynamicResource DateTimePickerFlyoutButtonForegroundPressed}"/>
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="DateTimePickerUpButton" TargetType="RepeatButton" BasedOn="{StaticResource NeumorphismDateTimePickerButton}">
    <Setter Property="VerticalAlignment" Value="Top"/>
    <Setter Property="Height" Value="22" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="IsVisible" Value="True"/>
    <Setter Property="Content">
      <Template>
        <Viewbox Height="10" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <Path Stroke="{Binding $parent[RepeatButton].Foreground}" StrokeThickness="1" Data="M 0,9 L 9,0 L 18,9"/>
        </Viewbox>
      </Template>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="DateTimePickerDownButton" TargetType="RepeatButton" BasedOn="{StaticResource NeumorphismDateTimePickerButton}">
    <Setter Property="VerticalAlignment" Value="Bottom"/>
    <Setter Property="Height" Value="22" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="IsVisible" Value="True"/>
    <Setter Property="Content">
      <Template>
        <Viewbox Height="10" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <Path Stroke="{Binding $parent[RepeatButton].Foreground}" StrokeThickness="1" Data="M 0,0 L 9,9 L 18,0"/>
        </Viewbox>
      </Template>
    </Setter>
  </ControlTheme>
</ResourceDictionary>
